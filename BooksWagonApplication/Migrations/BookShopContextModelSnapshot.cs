// <auto-generated />
using System;
using BooksWagonApplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BooksWagonApplication.Migrations
{
    [DbContext(typeof(BookShopContext))]
    partial class BookShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity<ArtsPhotography>(entity =>
            {
                entity.Property(e => e.BookId)
                    .HasColumnType("int")
                    .ValueGeneratedNever();

                entity.Property(e => e.Author)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnType("varchar(60)");

                entity.Property(e => e.Bindingtype)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnType("varchar(60)");

                entity.Property(e => e.BookName)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnType("varchar(60)");

                entity.Property(e => e.Languagetype)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnType("varchar(60)");

                entity.Property(e => e.Publisher)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnType("varchar(60)");

                entity.Property(e => e.ReleaseDate)
                    .HasColumnType("date");

                entity.Property(e => e.SubTypeOfBook)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnType("varchar(60)");

                entity.Property(e => e.TypeOfBook)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnType("varchar(60)");

                entity.HasKey(e => e.BookId)
                    .HasName("PK__ArtsPhot__3DE0C207F2C47ACD");

                entity.HasIndex(e => e.BookTypeId);

                entity.ToTable("ArtsPhotography");
            });

            modelBuilder.Entity<ArtsPhotographyDatum>(entity =>
            {
                entity.Property(e => e.BookTypeId)
                    .HasColumnType("int")
                    .ValueGeneratedNever();

                entity.Property(e => e.SubTypeOfBook)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnType("varchar(60)");

                entity.Property(e => e.TypeOfBook)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnType("varchar(60)");

                entity.HasKey(e => e.BookTypeId)
                    .HasName("PK__Arts_Pho__259BDEF3FA763D7F");

                entity.ToTable("Arts_PhotographyData");
            });

            modelBuilder.Entity<ArtsPhotography>(entity =>
            {
                entity.HasOne(d => d.BookType)
                    .WithMany(p => p.ArtsPhotographies)
                    .HasForeignKey(d => d.BookTypeId)
                    .HasConstraintName("FK_ArtsBookType");

                entity.Navigation(d => d.BookType);
            });

            modelBuilder.Entity<ArtsPhotographyDatum>(entity =>
            {
                entity.Navigation(d => d.ArtsPhotographies);
            });
#pragma warning restore 612, 618
        }
    }
}

